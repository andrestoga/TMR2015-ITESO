/////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////// S L A V E ///////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

#define BT_CONN 1
#define INBOX 5
#define OUTBOX 1

// MACROS
#define LSR \
SENSOR_1           // LSR = Light Sensor Right
#define LSL \
SENSOR_2           // LSL = Light Sensor Left
#define TSR \
SENSOR_3           // TSR = Touch Sensor Right
#define TSL \
SENSOR_4           // TSL = Touch Sensor Left
#define DELAY \
Wait(500);        // DELAY = Descansa por 500 ms

// CONSTANTES
#define V  60      // V  = Velocidad con la que avanzará normalmente

// VARIABLES
bool vioAlgo = false;
string out = "";
string in = "nada";
int promedio = 50;
long nada=0;

// M. IZQUIERDO - A
// M. DERECHO   - B
// M. ELEVADOR  - C
// LSC = Light Sensor Central
// STOP = Apaga los 3 motores
// FWD = Avanza recto
// REV = Retrocede recto
// FWD_A = Avanza motor A
// FWD_B = Avanza motor B

sub conexion(int conn);
sub s1();

task main(){
     PlaySound(SOUND_FAST_UP);
     SetSensorLight(IN_1);                // Define el puerto del LSR
     SetSensorLight(IN_2);                // Define el puerto del LSL
     SetSensorTouch(IN_3);                // Define el puerto del TSR
     SetSensorTouch(IN_4);                // Define el puerto del TSL
     conexion(0);			  // Inicia conexión Bluetooth
     s1();                                // Inicia el Estado 1
}

sub s1(){
    while(1){
         promedio = (LSL + LSR)/2;
         if(promedio < 40){                             // Si el H es negro...
             SendResponseString(OUTBOX,"Negro");	      // Notifica al maestro
             Wait(500);
         }else if(promedio > 65){                       // Pero si es blanco...
             SendResponseString(OUTBOX,"Blanco");	      // Notifica al maestro
             Wait(10);
             SendResponseString(OUTBOX,"Nada");		      // Después le dice que no hay nada
             Wait(4000);				                        // Espera a que el maestro haga la rutina de salvar
         }
         if(TSR == 1 && TSL == 1){
             SendResponseString(OUTBOX,"Presion");
         }else if(TSR == 0 || TSL == 0){
             SendResponseString(OUTBOX,"NoPresion");
         }
         promedio = (LSL + LSR)/2;                      // Promedia los valores de ambos LS
     }
}

sub conexion(int conn){
   if (!BluetoothStatus(conn)==NO_ERR){
        TextOut(5,LCD_LINE2,"   Error");
        TextOut(5,LCD_LINE4,"de Bluetooth");
        Wait(2000);
        Stop(true);
   }
}


